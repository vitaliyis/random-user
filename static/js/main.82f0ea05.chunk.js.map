{"version":3,"sources":["assets/img/vetal.jpg","components/Navbar/Navbar.js","utils/utils.js","api/api.js","redux/reducers/contacts/contacts.actions.js","redux/reducers/contacts/contacts.types.js","components/pages/Contacts/CopyToClipboardContainer/CopyToClipboardContainer.js","components/pages/Contacts/Table/TableItem/TableItem.js","components/pages/Contacts/Table/ArrowMark/ArrowMark.js","constans/constans.js","components/pages/Contacts/Table/Table.js","components/pages/Contacts/Tiled/TiledItem/TiledItem.js","components/pages/Contacts/Tiled/Tiled.js","components/Spinner/Spinner.js","components/pages/Contacts/Statistic/Statistic.js","components/Pagination/Pagination1.js","components/Pagination/Pagination2.js","components/Pagination/Pagination3.js","components/Pagination/Pagination4.js","components/Pagination/PaginationContainer.js","components/pages/Contacts/FilterForm/Filterform.js","components/pages/Contacts/ViewDataControls/ViewDataControls.js","components/pages/Contacts/Contacts.js","components/pages/Home/Home.js","components/pages/NotFound/NotFound.js","components/pages/AboutMe/AboutMe.js","components/App.js","serviceWorker.js","redux/reducers/contacts/contacts.reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","Navbar","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","exact","getSumGender","arr","gender","result","length","forEach","item","getPhone","telStr","reg","RegExp","replace","fetchGetData","fetch","min","max","Math","floor","random","mode","then","response","json","catch","err","console","error","isLoading","payload","setCurrentPage","setError","setSort","setFilter","getDataFromServer","dispatch","data","results","setInitialLoaded","CopyToClipboardContainer","props","value","useState","copyValue","setCopyValue","onCopy","setTimeout","text","TableItem","str","src","picture","thumbnail","alt","name","title","first","last","dob","date","Date","toLocaleDateString","weekday","year","month","day","hour","minute","second","age","href","email","phone","location","country","street","number","state","postcode","nat","ArrowMark","sortCondition","Table","sort","scope","onClick","data-title","getMessageForSortTooltip","map","key","TiledItem","large","Tiled","Spinner","role","Statistic","male","female","indeterminate","males","females","Indeterminates","analyticGender","nats","isFind","i","quantity","push","getStatisticNationalities","Pagination1","currentPage","numberPages","Pagination2","sizeChangePagination","Pagination3","leftMark","rightMark","Pagination4","PaginationContainer","quantityPage","genders","mapDispatchToProps","connect","filter","contacts","nationalities","idNat","getListNationalities","onChange","e","target","action","placeholder","fullName","nationality","preventDefault","toggleViewTable","viewTable","pagination","disabled","filteredData","resultData","toLocaleLowerCase","includes","filterData","getDataWithFullName","ceil","getQuantityPage","sortedData","prev","next","sortByDown","sortByString","dataCurrentPage","sizePage","beginPage","endPage","slice","getDataByCurrentPage","isInitialLoaded","useEffect","Home","NotFound","AboutMe","myPhoto","App","path","component","Contacts","Boolean","window","hostname","match","defaultState","localInitialState","localStorage","getItem","initialState","JSON","parse","contactsReducer","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","subscribe","stringify","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.82f0ea05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vetal.fcfaaffa.jpg\";","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nexport const Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/\" exact>Home <span className=\"sr-only\">(current)</span></NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/contacts\">Contacts</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/aboutme\">About me</NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  )\n}","import {NORMAL, SORT_ASC, SORT_DESC} from \"../constans/constans\";\n\nexport const getSumGender = (arr, gender) => {\n  let result = 0;\n\n  if (arr.length) {\n    arr.forEach(item => {\n      if (item.gender === gender) result++;\n    })\n  }\n\n  return result;\n}\n\nexport const getMaxGender = (male, female, indeterminate) => {\n  if (male > female && male > indeterminate) return \"Men predominate\";\n  if (female > male && female > indeterminate) return \"Women predominate\";\n  if (indeterminate > male && indeterminate > female) return \"Indeterminate predominate\";\n\n  if (male === female && male > indeterminate) return \"Men and female are equal\";\n  if (male === female && male === indeterminate) return \"Men and female and indeterminate are equal\";\n\n  if (indeterminate === female && indeterminate > male) return \"Indeterminate and women are equal\";\n  if (indeterminate === male && indeterminate > female) return \"Indeterminate and men are equal\";\n}\n\nexport const getStatisticNationalities = data => {\n  const result = [];\n  let isFind = false;\n\n  data.forEach(item => {\n    if (!result.length) {\n      result.push({\n        name: item.nat,\n        quantity: 1\n      })\n    } else {\n      for (let i = 0; i < result.length; i++) {\n        if (item.nat === result[i].name) {\n          result[i].quantity++;\n          isFind = true;\n          break;\n        }\n      }\n      if (!isFind) {\n        result.push({\n          name: item.nat,\n          quantity: 1\n        })\n      }\n      isFind = false;\n    }\n  })\n\n  return result;\n}\n\nexport const getListNationalities = data => {\n  const result = [];\n  let isFind = false;\n  let idNat = 0;\n\n  result.push({\n    id: idNat,\n    name: 'Nationality',\n    value: ''\n  });\n\n  data.forEach(item => {\n    for (let i = 0; i < result.length; i++) {\n      if (item.nat === result[i].name) {\n        isFind = true;\n        break;\n      }\n    }\n    if (!isFind) {\n      result.push({\n        id: ++idNat,\n        name: item.nat,\n        value: item.nat\n      })\n    }\n    isFind = false;\n  })\n\n  return result;\n}\n\nexport const getRandomInRange = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const transformDate = str => {\n  let date = new Date(str);\n\n  const options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: '2-digit',\n    day: 'numeric',\n    hour:'2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  };\n\n  return date.toLocaleDateString('en-US', options);\n}\n\nexport const getDataWithFullName = data => {\n  return data.map(item => {\n    item.fullName = `${item.name.first} ${item.name.last}`;\n    return item;\n  });\n}\n\nexport const sortByUp = key => (prev, next) => {\n  if (prev[key] < next[key]) return -1\n  if (prev[key] > next[key]) return 1\n}\n\nexport const sortByDown = key => (prev, next) => {\n  if (prev[key] > next[key]) return -1\n  if (prev[key] < next[key]) return 1\n}\n\nexport const sortByString = (data, sortCondition) => {\n  switch (sortCondition){\n    case SORT_ASC:\n      return [...data].sort(sortByUp('fullName'));\n    case SORT_DESC:\n      return [...data].sort(sortByDown('fullName'));\n    case NORMAL:\n      return data;\n    default:\n      return data;\n  }\n}\n\nexport const getDataByCurrentPage = (data, sizePage, currentPage) => {\n  const beginPage = sizePage * currentPage - sizePage;\n  const endPage = sizePage * currentPage;\n  return data.slice(beginPage, endPage);\n}\n\nexport const filterData = (data, fullName, gender, nationality) => {\n  let resultData = data;\n\n  if (fullName) {\n    resultData = resultData.filter(item => item.fullName.toLocaleLowerCase().includes(fullName.toLocaleLowerCase()));\n  }\n\n  if (gender) {\n    resultData = resultData.filter(item => item.gender.toLocaleLowerCase().includes(gender.toLocaleLowerCase()) && item.gender.length === gender.length);\n  }\n\n  if (nationality) {\n    resultData = resultData.filter(item => item.nat.toLocaleLowerCase().includes(nationality.toLocaleLowerCase()));\n  }\n\n  return resultData;\n}\n\nexport const getQuantityPage = data => {\n  if (data.length) { return Math.ceil(data.length / 50) }\n}\n\nexport const getPhone = telStr => {\n  if (telStr) {\n    let reg = new RegExp(/[-()/ /\\\\]/g);\n    return telStr.replace(reg,'');\n  }\n  return '';\n}","import {getRandomInRange} from \"../utils/utils\";\n\nexport const fetchGetData = () => {\n  return fetch(`https://randomuser.me/api/1.3/?results=${getRandomInRange(1, 1000)}`, {mode: \"cors\"})\n    .then(response => response.json())\n    .catch(err => {\n      console.error('err fetch => ', err);\n      return err;\n    })\n}","import {\r\n  GET_DATA, IS_INITIAL_LOADED,\r\n  IS_LOADING,\r\n  SET_CURRENT_PAGE,\r\n  SET_ERROR, SET_FILTER,\r\n  SET_SORT,\r\n  TOGGLE_VIEW_TABLE\r\n} from \"./contacts.types\";\r\nimport {fetchGetData} from \"../../../api/api\";\r\n\r\nexport const getData = payload => {\r\n  return {\r\n    type: GET_DATA,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const toggleViewTable = payload => {\r\n  return {\r\n    type: TOGGLE_VIEW_TABLE,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const isLoading = payload => {\r\n  return {\r\n    type: IS_LOADING,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const setInitialLoaded = payload => {\r\n  return {\r\n    type: IS_INITIAL_LOADED,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const setCurrentPage = payload => {\r\n  return {\r\n    type: SET_CURRENT_PAGE,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const setError = payload => {\r\n  return {\r\n    type: SET_ERROR,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const setSort = payload => {\r\n  return {\r\n    type: SET_SORT,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const setFilter = payload => {\r\n  return {\r\n    type: SET_FILTER,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const getDataFromServer = () => dispatch => {\r\n  dispatch(isLoading(true));\r\n    fetchGetData()\r\n      .then(data => {\r\n        if (data.results) {\r\n          dispatch(getData(data.results));\r\n          dispatch(setInitialLoaded(true));\r\n        } else {\r\n          dispatch(setError(`${data.error || data}`));\r\n        }\r\n        dispatch(isLoading(false));\r\n      })\r\n      .catch(err => {\r\n        console.error('err actions => ', err);\r\n        dispatch(setError(err));\r\n      })\r\n}\r\n","export const GET_DATA = 'GET_DATA';\r\nexport const TOGGLE_VIEW_TABLE = 'TOGGLE_VIEW_TABLE';\r\nexport const IS_LOADING = \"IS_LOADING\";\r\nexport const SET_QUANTITY_PAGE = \"SET_QUANTITY_PAGE\";\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const SET_SORT = \"SET_SORT\";\r\nexport const SET_FILTER = \"SET_FILTER\";\r\nexport const IS_INITIAL_LOADED = \"IS_INITIAL_LOADED\";","import React, {useState} from \"react\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\n\nconst CopyToClipboardContainer = props => {\n  const {value} = props;\n\n  const [copyValue, setCopyValue] = useState('');\n\n  const onCopy = () => {\n    setCopyValue('Copied');\n    setTimeout(() => {\n      setCopyValue('');\n    }, 2000);\n  }\n\n  return (\n    <CopyToClipboard onCopy={onCopy} text={value}>\n      <button className={`btn ${copyValue ? \"btn-outline-success\" : \"btn-outline-primary\"} btn-sm btn-clipboard`}>{`${copyValue ? copyValue : \"copy\"}`}</button>\n    </CopyToClipboard>\n  )\n}\n\nexport default CopyToClipboardContainer;","import React from \"react\";\nimport {getPhone, transformDate} from \"../../../../../utils/utils\";\nimport CopyToClipboardContainer from \"../../CopyToClipboardContainer/CopyToClipboardContainer\";\n\nconst TableItem = props => {\n  const {item} = props;\n\n  return (\n    <tr>\n      <td>\n        <img src={item.picture.thumbnail} alt=\"\"/>\n      </td>\n      <td>{`${item.name.title}. ${item.name.first} ${item.name.last}`}</td>\n      <td>\n        <p>{transformDate(item.dob.date)}</p>\n        <p>{item.dob.age} years</p>\n      </td>\n      <td>\n        <p><a href={`mailto:${item.email}`}>{item.email}</a></p>\n        <CopyToClipboardContainer value={item.email}/>\n      </td>\n      <td>\n        <p><a href={`tel:${getPhone(item.phone)}`}>{item.phone}</a></p>\n        <CopyToClipboardContainer value={item.phone}/>\n      </td>\n      <td>\n        <p>{`${item.location.country} ${item.location.street.number} ${item.location.street.name} ${item.location.state} ${item.location.postcode}`}</p>\n        <CopyToClipboardContainer value={`${item.location.country} ${item.location.street.number} ${item.location.street.name} ${item.location.state} ${item.location.postcode}`}/>\n      </td>\n      <td>{item.nat}</td>\n    </tr>\n  )\n}\n\nexport default TableItem;","import React, {Fragment} from 'react'\r\nimport {SORT_ASC, SORT_DESC} from \"../../../../../constans/constans\";\r\n\r\nconst ArrowMark = props => {\r\n  const {sortCondition} = props;\r\n  return (\r\n    <Fragment>\r\n      {(sortCondition === SORT_ASC) ? <b>&uarr;</b> : null}\r\n      {(sortCondition === SORT_DESC) ? <b>&darr;</b> : null}\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport default ArrowMark;","export const SORT_ASC = 'asc';\nexport const SORT_DESC = 'desc';\nexport const NORMAL = 'normal';\nexport const SIZE_PAGE = 50;","import React from 'react';\nimport TableItem from \"./TableItem/TableItem\";\nimport ArrowMark from \"./ArrowMark/ArrowMark\";\nimport {NORMAL, SORT_ASC, SORT_DESC} from \"../../../../constans/constans\";\n\nconst Table = props => {\n\n  const {data, sort, setSort} = props;\n\n  const updateSort = () => {\n    switch (sort) {\n      case NORMAL:\n        setSort(SORT_ASC);\n        break;\n      case SORT_ASC:\n        setSort(SORT_DESC);\n        break;\n      case SORT_DESC:\n        setSort(NORMAL);\n        break;\n      default:\n        break;\n    }\n  }\n\n  const getMessageForSortTooltip = () => {\n    switch (sort) {\n      case NORMAL:\n        return \"Sort by asc\";\n      case SORT_ASC:\n        return \"Sort by desc\";\n      case SORT_DESC:\n        return \"Sort by normal\";\n      default:\n        break;\n    }\n  }\n\n  return (\n    <div className=\"table-wrapper\">\n      <div className=\"table-responsive\">\n        <table className=\"table\">\n          <thead>\n          <tr>\n            <th scope=\"col\" className=\"text-nowrap\">Avatar</th>\n            <th scope=\"col\"\n                className=\"text-nowrap table-fullname\"\n                onClick={updateSort}\n                data-title={getMessageForSortTooltip()}\n            >Full name <ArrowMark sortCondition={sort}/></th>\n            <th scope=\"col\" className=\"text-nowrap\">Birthday</th>\n            <th scope=\"col\" className=\"text-nowrap\">Email</th>\n            <th scope=\"col\" className=\"text-nowrap\">Phone</th>\n            <th scope=\"col\" className=\"text-nowrap\">Location</th>\n            <th scope=\"col\" className=\"text-nowrap\">Nationality</th>\n          </tr>\n          </thead>\n          <tbody>\n          {data.map(item => {\n            return (\n              <TableItem item={item} key={item.phone}/>\n            )\n          })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Table;","import React from \"react\";\nimport {getPhone} from \"../../../../../utils/utils\";\nimport CopyToClipboardContainer from \"../../CopyToClipboardContainer/CopyToClipboardContainer\";\n\nconst TiledItem = props => {\n  const {item} = props;\n\n  return (\n    <div className=\"col-md-4 mb-3 col-sm-6\">\n      <div className=\"card\">\n        <img src={item.picture.large} className=\"card-img-top\" alt=\"...\"/>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{`${item.name.title}. ${item.name.first} ${item.name.last} (${item.dob.age} years)`}</h5>\n          <div className=\"mb-2 tiled-item-email\">\n            <CopyToClipboardContainer value={item.email}/>\n            <span className=\"card-text ml-2\"><a href={`mailto:${item.email}`}>{item.email}</a></span>\n          </div>\n\n          <div className=\"mb-2\">\n            <CopyToClipboardContainer value={item.phone}/>\n            <span className=\"card-text ml-2\"><a href={`tel:${getPhone(item.phone)}`}>{item.phone}</a></span>\n          </div>\n\n          <div className=\"mb-2\">\n            <CopyToClipboardContainer value={`${item.location.country} ${item.location.street.number} ${item.location.street.name} ${item.location.state} ${item.location.postcode}`}/>\n            <span className=\"card-text ml-2\">{`${item.location.country} ${item.location.street.number} ${item.location.street.name} ${item.location.state} ${item.location.postcode}`}</span>\n          </div>\n\n          <p>{item.nat}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TiledItem;","import React from \"react\";\nimport TiledItem from \"./TiledItem/TiledItem\";\n\nconst Tiled = props => {\n  return (\n    <div className=\"row\">\n      {props.data.map(item => <TiledItem item={item} key={item.phone}/>) }\n    </div>\n  )\n}\n\nexport default Tiled;","import React from 'react';\n\nconst Spinner = () => {\n  return(\n    <div className=\"text-center\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Spinner;","import React from \"react\";\nimport {getMaxGender, getStatisticNationalities, getSumGender} from \"../../../../utils/utils\";\n\nconst Statistic = props => {\n\n  const males = getSumGender(props.data, \"male\");\n  const females = getSumGender(props.data, \"female\");\n  const Indeterminates = getSumGender(props.data, \"indeterminate\");\n  const analyticGender = getMaxGender(males, females, Indeterminates);\n\n\n\n  const nats = getStatisticNationalities(props.data);\n\n  return (\n    <div className=\"statistic mt-3 p-3 mb-3\">\n      <h5>Statistic:</h5>\n      <div className=\"statistic-row d-flex justify-content-between mb-3 flex-column flex-sm-row text-center text-sm-left\">\n        <div className=\"statistic-item\">\n          <p className=\"statistic-item-title\">Collection size</p>\n          <p className=\"statistic-item-content\">{props.data.length}</p>\n        </div>\n        <div className=\"statistic-item\">\n          <p className=\"statistic-item-title\">Males</p>\n          <p className=\"statistic-item-content\">{males}</p>\n        </div>\n        <div className=\"statistic-item\">\n          <p className=\"statistic-item-title\">Females</p>\n          <p className=\"statistic-item-content\">{females}</p>\n        </div>\n        <div className=\"statistic-item\">\n          <p className=\"statistic-item-title\">Indeterminate</p>\n          <p className=\"statistic-item-content\">{Indeterminates}</p>\n        </div>\n        <div className=\"statistic-item\">\n          <p className=\"statistic-item-title\">Analytics</p>\n          <p className=\"statistic-item-content\">{analyticGender}</p>\n        </div>\n      </div>\n      <div className=\"row\">\n        {nats.map(nat => {\n          return (\n            <div className=\"col-4 col-md-2 mb-2\" key={Math.random()}>\n              <span><strong>{nat.name}:</strong></span>\n              <span>  {nat.quantity}</span>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default Statistic","import React from 'react'\r\n\r\nconst Pagination1 = (props) => {\r\n  const {currentPage, numberPages, setCurrentPage} = props\r\n\r\n  return (\r\n    <nav className=\"nav-pagination\">\r\n      <ul className=\"pagination\">\r\n        {numberPages.map(item => {\r\n          return currentPage === item\r\n            ? <li className=\"page-item active\" key={item}><span className=\"page-link\">{item}</span></li>\r\n            : <li className=\"page-item\" key={item}>\r\n              <button className=\"page-link\"\r\n                 onClick={() => setCurrentPage(item)}\r\n              >{item}\r\n              </button>\r\n            </li>\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination1","import React from 'react'\r\n\r\nconst Pagination2 = (props) => {\r\n  const {currentPage, numberPages, sizeChangePagination, setCurrentPage} = props\r\n\r\n  return (\r\n    <nav className=\"nav-pagination\">\r\n      <ul className=\"pagination\">\r\n        {numberPages.map(item => {\r\n          return currentPage === item\r\n            ? <li className=\"page-item active\" key={item}><span className=\"page-link\">{item}</span></li>\r\n            : item <= sizeChangePagination + 1//<= 5\r\n                ? <li className=\"page-item\" key={item}>\r\n                <button className=\"page-link\"\r\n                   onClick={() => setCurrentPage(item)}\r\n                >{item}</button></li>\r\n                : null\r\n        })}\r\n        <li className=\"page-item\" key={numberPages.length - 2}><span className=\"page-link\">...</span></li>\r\n        <li className=\"page-item\" key={numberPages.length - 1}>\r\n          <button className=\"page-link\"\r\n             onClick={() => setCurrentPage(numberPages.length)}\r\n          >{numberPages.length}</button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination2","import React from 'react'\r\n\r\nconst Pagination3 = (props) => {\r\n  const {currentPage, numberPages, setCurrentPage} = props\r\n\r\n  const leftMark = currentPage - 2\r\n  const rightMark = currentPage + 2\r\n\r\n  return (\r\n    <nav className=\"nav-pagination\">\r\n      <ul className=\"pagination\">\r\n        <li className=\"page-item\" key={1}>\r\n          <button className=\"page-link\"\r\n             onClick={() => setCurrentPage(1)}\r\n          >{1}</button>\r\n        </li>\r\n        <li className=\"page-item\" key={2}><span className=\"page-link\">...</span></li>\r\n        {numberPages.map(item => {\r\n          return currentPage === item\r\n            ? <li className=\"page-item active\" key={item}><span className=\"page-link\">{item}</span></li>\r\n            : item >= leftMark && item <= rightMark\r\n              ? <li className=\"page-item\" key={item}>\r\n                  <button className=\"page-link\"\r\n                     onClick={() => setCurrentPage(item)}\r\n                  >{item}</button>\r\n                </li>\r\n              : null\r\n        })}\r\n        <li className=\"page-item\" key={numberPages.length - 2}><span className=\"page-link\">...</span></li>\r\n        <li className=\"page-item\" key={numberPages.length - 1}>\r\n          <button className=\"page-link\"\r\n             onClick={() => setCurrentPage(numberPages.length)}\r\n          >{numberPages.length}</button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination3","import React from 'react'\r\n\r\nconst Pagination4 = (props) => {\r\n  const {currentPage, numberPages, sizeChangePagination, setCurrentPage} = props\r\n\r\n  return (\r\n    <nav className=\"nav-pagination\">\r\n      <ul className=\"pagination\">\r\n        <li className=\"page-item\" key={1}>\r\n          <button className=\"page-link\"\r\n             onClick={() => setCurrentPage(1)}\r\n          >{1}</button>\r\n        </li>\r\n        <li className=\"page-item\" key={2}><span className=\"page-link\">...</span></li>\r\n        {numberPages.map(item => {\r\n          return currentPage === item\r\n            ? <li className=\"page-item active\" key={item}><span className=\"page-link\">{item}</span></li>\r\n            : item >= numberPages.length - sizeChangePagination\r\n              ? <li className=\"page-item\" key={item}>\r\n                  <button className=\"page-link\"\r\n                     onClick={() => setCurrentPage(item)}\r\n                  >{item}</button>\r\n                </li>\r\n              : null\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination4","import React, {Fragment} from 'react'\r\nimport Pagination1 from \"./Pagination1\";\r\nimport Pagination2 from \"./Pagination2\";\r\nimport Pagination3 from \"./Pagination3\";\r\nimport Pagination4 from \"./Pagination4\";\r\n\r\nconst lengthPagination = 7\r\nconst sizeChangePagination = 4    // если currentPage выходит за его предел то пагинация меняется\r\n\r\nconst PaginationContainer = (props) => {\r\n  const {quantityPage, currentPage, setCurrentPage} = props\r\n\r\n  const numberPages = []\r\n  for (let i = 1; i <= quantityPage; i++) { numberPages.push(i) }\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      {quantityPage <= lengthPagination ?\r\n        <Pagination1\r\n          currentPage={currentPage}\r\n          numberPages={numberPages}\r\n          setCurrentPage={setCurrentPage}\r\n        /> : null}\r\n\r\n      {quantityPage > lengthPagination && currentPage <= sizeChangePagination ?\r\n        <Pagination2\r\n          currentPage={currentPage}\r\n          numberPages={numberPages}\r\n          sizeChangePagination={sizeChangePagination}\r\n          setCurrentPage={setCurrentPage}\r\n        /> : null}\r\n\r\n      {quantityPage > lengthPagination && currentPage > sizeChangePagination &&\r\n        (numberPages.length - sizeChangePagination) >= currentPage?\r\n        <Pagination3\r\n          currentPage={currentPage}\r\n          numberPages={numberPages}\r\n          setCurrentPage={setCurrentPage}\r\n        /> : null}\r\n\r\n      {quantityPage > lengthPagination && currentPage > sizeChangePagination &&\r\n        (numberPages.length - sizeChangePagination) < currentPage ?\r\n        <Pagination4\r\n          currentPage={currentPage}\r\n          numberPages={numberPages}\r\n          sizeChangePagination={sizeChangePagination}\r\n          setCurrentPage={setCurrentPage}\r\n        /> : null}\r\n\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport default PaginationContainer","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n  setCurrentPage,\n  setFilter,\n} from \"../../../../redux/reducers/contacts/contacts.actions\";\nimport {getListNationalities} from \"../../../../utils/utils\";\n\nconst genders = [\n  {id: 1, name: 'Genders', value: ''},\n  {id: 2, name: 'Male', value: 'male'},\n  {id: 3, name: 'Female', value: 'female'},\n  {id: 4, name: 'Indeterminate', value: 'indeterminate'}\n];\n\nconst FilterForm = props => {\n\n  const {filter, data, setFilter, setCurrentPage} = props;\n\n  const nationalities = getListNationalities(data);\n\n  const onChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFilter({[name]: value});\n    setCurrentPage(1);\n  }\n\n  const clearFilters = (e) => {\n    e.preventDefault();\n    setFilter({\n      fullName: '',\n      gender: '',\n      nationality: ''\n    });\n  }\n\n  return (\n    <div className=\"mb-2\">\n      <form action=\"\">\n        <div className=\"row\">\n          <div className=\"col-md-4 mb-2 mb-md-0\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search by full name\"\n              name=\"fullName\"\n              value={filter.fullName}\n              onChange={onChange}\n            />\n          </div>\n          <div className=\"col-md-3 mb-2 mb-md-0\">\n            <select\n              className=\"form-control\"\n              name=\"gender\"\n              value={filter.gender}\n              onChange={onChange}\n            >\n              {genders.map(gender => (\n                <option key={gender.id} value={gender.value}>{gender.name}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"col-md-3 mb-2 mb-md-0\">\n            <select\n              className=\"form-control\"\n              name=\"nationality\"\n              value={filter.nationality}\n              onChange={onChange}\n            >\n              {nationalities.map(nat => (\n                <option key={nat.id} value={nat.value}>{nat.name}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"col-md-2 mb-2 mb-md-0\">\n            <button\n              className=\"btn btn-outline-primary w-100\"\n              onClick={clearFilters}\n            >Clear</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: state.contacts.filter,\n  }\n}\n\nconst mapDispatchToProps = {\n  setFilter,\n  setCurrentPage\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterForm);","import React from \"react\";\nimport {\n  getDataFromServer,\n  setCurrentPage, setError, setFilter,\n  setSort,\n  toggleViewTable\n} from \"../../../../redux/reducers/contacts/contacts.actions\";\nimport {connect} from \"react-redux\";\nimport {NORMAL} from \"../../../../constans/constans\";\n\nconst ViewDataControls = props => {\n\n  const {viewTable, toggleViewTable, isLoading, error, getDataFromServer, setSort, setCurrentPage, setFilter, setError} = props;\n\n  const updateData = () => {\n    toggleViewTable(true);\n    setSort(NORMAL);\n    setCurrentPage(1);\n    setError('');\n    setFilter({\n      fullName: '',\n      gender: '',\n      nationality: ''\n    });\n    getDataFromServer();\n  }\n\n   return (\n     <div className=\"mb-3 d-flex justify-content-between flex-column flex-sm-row\">\n       <button\n         className=\"btn btn-success mb-2 mb-sm-0\"\n         onClick={updateData}\n         disabled={isLoading}\n       >Update data</button>\n       {!error &&\n        <div className=\"d-flex contacts-group-btn\">\n         <button\n           type=\"button\"\n           className={`btn ${viewTable ? \"btn-outline-primary\" : \"btn-primary\"} `}\n           onClick={() => toggleViewTable(false)}\n           disabled={isLoading}\n         >Tiled view\n         </button>\n         <button\n           type=\"button\"\n           className={`btn ml-2 ${viewTable ? \"btn-primary\" : \"btn-outline-primary\"} `}\n           onClick={() => toggleViewTable(true)}\n           disabled={isLoading}\n         >Tabular view\n         </button>\n       </div>\n       }\n     </div>\n   )\n}\n\nconst mapStateToProps = state => {\n  return {\n    viewTable: state.contacts.viewTable,\n    isLoading: state.contacts.isLoading,\n    error: state.contacts.error,\n    filter: state.contacts.filter,\n    pagination: state.contacts.pagination,\n  }\n\n}\n\nconst mapDispatchToProps = {\n  getDataFromServer,\n  toggleViewTable,\n  setCurrentPage,\n  setSort,\n  setFilter,\n  setError\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewDataControls);","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  getDataFromServer,\r\n  setCurrentPage,\r\n  setSort,\r\n} from \"../../../redux/reducers/contacts/contacts.actions\";\r\nimport Table from \"./Table/Table\";\r\nimport Tiled from \"./Tiled/Tiled\";\r\nimport Spinner from \"../../Spinner/Spinner\";\r\nimport Statistic from \"./Statistic/Statistic\";\r\nimport PaginationContainer from \"../../Pagination/PaginationContainer\";\r\nimport {\r\n  filterData,\r\n  getDataByCurrentPage,\r\n  getDataWithFullName, getQuantityPage,\r\n  sortByString,\r\n} from \"../../../utils/utils\";\r\nimport FilterForm from \"./FilterForm/Filterform\";\r\nimport ViewDataControls from \"./ViewDataControls/ViewDataControls\";\r\nimport {SIZE_PAGE} from \"../../../constans/constans\";\r\n\r\nconst Contacts = props => {\r\n\r\n  const {currentPage} = props.pagination\r\n  const {error,\r\n    isLoading,\r\n    sort,\r\n    data,\r\n    dataCurrentPage,\r\n    viewTable,\r\n    quantityPage,\r\n    isInitialLoaded,\r\n    getDataFromServer,\r\n    setSort,\r\n    setCurrentPage} = props;\r\n\r\n  useEffect(() => {\r\n    if(!isInitialLoaded) getDataFromServer();\r\n  }, [isInitialLoaded, getDataFromServer]);\r\n\r\n  if (error) {\r\n    return (\r\n      <>\r\n        <h2 className=\"mt-3 mb-3\">Contacts</h2>\r\n        <ViewDataControls/>\r\n        <div><strong>{`Error=> ${error}!. Please try to run later.`}</strong></div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <>\r\n        <h2 className=\"mt-3 mb-3\">Contacts</h2>\r\n        <ViewDataControls/>\r\n        <Spinner/>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"mt-3 mb-3\">Contacts</h2>\r\n\r\n      <ViewDataControls/>\r\n\r\n      <FilterForm data={data}/>\r\n\r\n      { quantityPage > 1 &&\r\n        <PaginationContainer\r\n          currentPage={currentPage}\r\n          quantityPage={quantityPage}\r\n          setCurrentPage={setCurrentPage}\r\n        />\r\n      }\r\n\r\n      {viewTable\r\n          ? <Table data={dataCurrentPage} sort={sort} setSort={setSort}/>\r\n          : <Tiled data={dataCurrentPage}/>\r\n      }\r\n\r\n      <Statistic data={data}/>\r\n\r\n      { quantityPage > 1 &&\r\n        <PaginationContainer\r\n          currentPage={currentPage}\r\n          quantityPage={quantityPage}\r\n          setCurrentPage={setCurrentPage}\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const {\r\n    data,\r\n    pagination: {currentPage},\r\n    sort,\r\n    filter\r\n  } = state.contacts;\r\n\r\n  const newData = getDataWithFullName(data);\r\n\r\n  const filteredData = filterData(newData, filter.fullName, filter.gender, filter.nationality);\r\n\r\n  const quantityPage = getQuantityPage(filteredData);\r\n\r\n  const sortedData = sortByString(filteredData, sort);\r\n\r\n  const dataCurrentPage = getDataByCurrentPage(sortedData, SIZE_PAGE, currentPage);\r\n\r\n  return {\r\n    data: sortedData,\r\n    isLoading: state.contacts.isLoading,\r\n    viewTable: state.contacts.viewTable,\r\n    pagination: state.contacts.pagination,\r\n    error: state.contacts.error,\r\n    sort: state.contacts.sort,\r\n    isInitialLoaded: state.contacts.isInitialLoaded,\r\n    dataCurrentPage,\r\n    quantityPage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getDataFromServer,\r\n  setCurrentPage,\r\n  setSort\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);","import React from \"react\";\n\nexport const Home = () => {\n  return (\n    <h1>Home</h1>\n  )\n}","import React from 'react'\r\n\r\nexport const NotFound = () => {\r\n  return(\r\n    <div className=\"text-center\">\r\n      <h1 className=\"mt-5\">404 NOT FOUND</h1>\r\n      <h2>Excuse me, but such a page does not exist on this site.</h2>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\nimport myPhoto from '../../../assets/img/vetal.jpg'\n\nconst AboutMe = () => {\n  return (\n    <div className=\"card mb-3 mt-4\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-md-4\">\n          <img src={myPhoto} className=\"card-img\" alt=\"...\"/>\n        </div>\n        <div className=\"col-md-8\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Front-End React Developer: Vitaliy.</h5>\n            <p className=\"card-text\"><a href=\"mailto:vetal.friend@gmail.com\">vetal.friend@gmail.com</a></p>\n            <p className=\"card-text\"><small className=\"text-muted\">Last updated 21.10.2020</small></p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AboutMe;","import React from 'react';\nimport '../App.css';\nimport {Navbar} from \"./Navbar/Navbar\";\nimport Contacts from \"./pages/Contacts/Contacts\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {Home} from \"./pages/Home/Home\";\nimport {NotFound} from \"./pages/NotFound/NotFound\";\nimport AboutMe from \"./pages/AboutMe/AboutMe\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar/>\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/contacts\" component={Contacts}/>\n          <Route path=\"/aboutme\" component={AboutMe}/>\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  GET_DATA, IS_INITIAL_LOADED,\r\n  IS_LOADING,\r\n  SET_CURRENT_PAGE,\r\n  SET_ERROR, SET_FILTER,\r\n  SET_QUANTITY_PAGE, SET_SORT,\r\n  TOGGLE_VIEW_TABLE\r\n} from \"./contacts.types\";\r\nimport {NORMAL} from \"../../../constans/constans\";\r\n\r\nconst defaultState = {\r\n  data: [],\r\n  viewTable: true,\r\n  isLoading: false,\r\n  isInitialLoaded: false,\r\n  pagination: {\r\n    currentPage: 1,\r\n  },\r\n  error: '',\r\n  sort: NORMAL,\r\n  filter: {\r\n    fullName: '',\r\n    gender: '',\r\n    nationality: ''\r\n  }\r\n}\r\n\r\nconst localInitialState = localStorage.getItem('contacts-store');\r\n\r\nconst initialState = localInitialState ? JSON.parse(localInitialState) : defaultState;\r\n\r\nconst contactsReducer = (state = initialState, action) => {\r\n  const {payload} = action\r\n  switch (action.type) {\r\n    case GET_DATA:\r\n      return {\r\n        ...state,\r\n        data: payload\r\n      }\r\n\r\n    case TOGGLE_VIEW_TABLE:\r\n      return {\r\n        ...state,\r\n        viewTable: payload\r\n      }\r\n\r\n    case IS_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: payload\r\n      }\r\n\r\n    case SET_QUANTITY_PAGE:\r\n      return {\r\n        ...state,\r\n        pagination: {...state.pagination, quantityPage: payload}\r\n      }\r\n\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        pagination: {...state.pagination, currentPage: payload}\r\n      }\r\n\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload\r\n      }\r\n\r\n    case SET_SORT:\r\n      return {\r\n        ...state,\r\n        sort: payload\r\n      }\r\n\r\n    case SET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: {...state.filter, ...payload}\r\n      }\r\n\r\n    case IS_INITIAL_LOADED:\r\n      return {\r\n        ...state,\r\n        isInitialLoaded: payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default contactsReducer;","import {combineReducers} from 'redux'\nimport contactsReducer from \"./reducers/contacts/contacts.reducer\";\n\nexport default combineReducers({\n  contacts: contactsReducer\n})","import {applyMiddleware, createStore} from 'redux'\nimport rootReducer from './rootReducer'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store =createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nstore.subscribe(() => {\n  localStorage['contacts-store'] = JSON.stringify(store.getState().contacts);\n})\n\nexport default store;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}